colnames(dat1) <- dat[1,]
dat1
colnames(dat1)
dat1
dat <- shan_read_csv("E:\\insurance\\project_insurance_store\\input_new\\中国平安.csv")
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[2:length(dat)])
dat1
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat <- shan_read_csv("E:\\insurance\\project_insurance_store\\input_new\\中国平安.csv")
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[2:length(dat),])
dat1
dat <- shan_read_csv("E:\\insurance\\project_insurance_store\\input_new\\中国平安.csv")
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[(2:length(dat)),])
dat
dat[,1]
dat[1,]
dat[-1,]
dat[1,]
dat[-1,]
data.table(dat[-1,])
dat1<-data.table(dat[-1,])
colnames(dat1)
colnames(dat1)<-dat[1,]
dat1
result<-data.table()
dat <- shan_read_csv("E:\\insurance\\project_insurance_store\\input_new\\中国平安.csv")
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[-1,])
colnames(dat1)<-dat[1,]
result <- rbind(result,dat1)
result
wd1<-shan_str_replace_all("[/]","\\\\",wd)
path_in <- paste0(wd1,"\\project_insurance_scrap\\output")
path_out <- paste0(wd1,"\\project_insurance_store\\input_new\\")
shan_move_file(path_in,path_out)
wd1
os$
shan_rread_dir_csv<-function(filepath){
for( file in filepath ){
dat <- shan_read_csv(file)
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[-1,])
colnames(dat1)<-dat[1,]
result <- rbind(result,dat1)
}
return(result)
}
os$getcwd
os$getcwd()
path_out
os$listdir(out_path)
os$listdir(path_out)
paste0(path_out,os$listdir(path_out),collapse ="")
paste(path_out,os$listdir(path_out),collapse ="")
os$listdir(path_out)
paste0(path_out,os$listdir(path_out))
filepath <- paste0(path_out,os$listdir(path_out))
shan_rread_dir_csv<-function(filepath){
for( file in filepath ){
dat <- shan_read_csv(file)
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[-1,])
colnames(dat1)<-dat[1,]
result <- rbind(result,dat1)
}
return(result)
}
shan_read_dir_csv<-function(filepath){
for( file in filepath ){
dat <- shan_read_csv(file)
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[-1,])
colnames(dat1)<-dat[1,]
result <- rbind(result,dat1)
}
return(result)
}
os$
shan_read_dir_csv(filepath)
shan_read_dir_csv(filepath)
shan_read_dir_csv<-function(filepath){
result<-data.table()
for( file in filepath ){
dat <- shan_read_csv(file)
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[-1,])
colnames(dat1)<-dat[1,]
result <- rbind(result,dat1)
}
return(result)
}
shan_read_dir_csv(filepath)
shan_read_dir_csv<-function(path_out){
result<-data.table()
filepath <- paste0(path_out,os$listdir(path_out))
for( file in filepath ){
dat <- shan_read_csv(file)
dat<-matrix(unlist(dat), nrow=length(dat), byrow=T)
dat1<-data.table(dat[-1,])
colnames(dat1)<-dat[1,]
result <- rbind(result,dat1)
}
return(result)
}
shan_read_dir_csv(path_out)
dat<-shan_read_dir_csv(path_out)
saveRDS(dat, ".\input_old\city.rds")
dat<-shan_read_dir_csv(path_out)
saveRDS(dat, "./input_old/city.rds")
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os包
os <- import('os')
urllib <- import("urllib")
file_dir = "C:\\Users\\zhong\\Downloads\\【昱淳咨询】产品信息收集_20190620"
path <- shan_get_file_name(file_dir)
length(path)
"_条款_" %in% path
path
"_条款_" %in% unlist(path)
path
shan_str_count("条款_",path)
path[shan_str_count("条款_",path)>0]
pdf_name<- path[shan_str_count("条款_",path)>0]
pdf_name
name<- shan_str_extract("[.]pdf",pdf_name)
name
pdf_name
name<- shan_str_extract("_.+[.]pdf",pdf_name)
name
name<- shan_str_extract("^_.+[.]pdf",pdf_name)
name
name<- shan_str_extract("[^_]?.+[.]pdf",pdf_name)
name
shan_str_extract_between_smallest("_","[.]pdf",pdf_name)
shan_str_extract_between("_","[.]pdf",pdf_name)
pdf_name[289]
pdf_name
pdf_name<- path[shan_str_count("[.]pdf",path)>0]
pdf_name
pdf_name<- path[shan_str_count("条款_",path)>0]
pdf_name<- pdf_name[shan_str_count("[.]pdf",path)>0]
pdf_name
pdf_name<-path
pdf_name
pdf_name<- path[shan_str_count("条款_",path)>0]
pdf_name<- pdf_name[shan_str_count("[.]pdf",pdf_name)>0]
pdf_name
pdf_name[shan_str_count("附加",pdf_name)>0]
pdf_name[shan_str_count("附加",pdf_name)=0]
pdf_name[shan_str_count("附加",pdf_name)==0]
want<-pdf_name[shan_str_count("附加",pdf_name)==0]
name<-shan_str_extract_between("_","[.]pdf",want)
name
want
result<-rep("",length(name))
for(i in 1:length(want)){
filename<-want
# 获得原始数据代码
dat <- readPDF(control = list(text = "-layout"))(elem = list(uri = filename),
language = "en",
id = "id1")
dat1<-strsplit(dat$content,"\r\n")[[1]][1]
result[i]<-shan_str_replace_all(" ","",dat1)
}
library("pdftools")
result<-rep("",length(name))
for(i in 1:length(want)){
filename<-want
# 获得原始数据代码
dat <- readPDF(control = list(text = "-layout"))(elem = list(uri = filename),
language = "en",
id = "id1")
dat1<-strsplit(dat$content,"\r\n")[[1]][1]
result[i]<-shan_str_replace_all(" ","",dat1)
}
library("pdftools")
library("tm");
result<-rep("",length(name))
for(i in 1:length(want)){
filename<-want
# 获得原始数据代码
dat <- readPDF(control = list(text = "-layout"))(elem = list(uri = filename),
language = "en",
id = "id1")
dat1<-strsplit(dat$content,"\r\n")[[1]][1]
result[i]<-shan_str_replace_all(" ","",dat1)
}
i
filename
result<-rep("",length(name))
for(i in 1:length(want)){
filename<-want[i]
# 获得原始数据代码
dat <- readPDF(control = list(text = "-layout"))(elem = list(uri = filename),
language = "en",
id = "id1")
dat1<-strsplit(dat$content,"\r\n")[[1]][1]
result[i]<-shan_str_replace_all(" ","",dat1)
}
result
cbind(name,result)
dat<-cbind(name,result)
dat
dat<-cbind(name,result)
dat
shan_str_replace_all("\\D","",dat$result)
shan_str_replace_all("\\D","",result)
result1<-shan_str_replace_all("\\D","",result)
dat<-cbind(name,result1)
dat
dat<-cbind(name,result1,result2)
dat<-cbind(name,result1,result)
dat
result1==""
mean(result1=="")
mean(result1=="",na.rm=TRUE)
write.xlsx(dat, paste0("E:/xupuqi.xlsx") , sheetName="Sheet1",col.names=TRUE , row.names=FALSE)
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os包
os <- import('os')
urllib <- import("urllib")
wd1<-shan_str_replace_all("[/]","\\\\",wd)
path_in <- paste0(wd1,"\\project_insurance_scrap\\output")
path_out <- paste0(wd1,"\\project_insurance_store\\input_new\\")
shan_move_file(path_in,path_out)
dat<-shan_read_dir_csv(path_out)
saveRDS(dat, "./input_old/output.rds")
dat
dat
path_out
dat$product_contract_link
dat
path_out
wd
wd1
paste(wd1,"\\project_insurance_store"
paste(wd1,"\\project_insurance_store",dat$company_name)
paste(wd1,"\\project_insurance_store",as.character(dat$company_name))
paste(wd1,"\\project_insurance_store",as.character(dat$company_name),sep="")
paste(wd1,"\\project_insurance_store\\output_contract",as.character(dat$company_name),sep="")
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="")
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),as.character(dat$product_name),sep="")
path_out<-paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),as.character(dat$product_name),sep="")
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os包
os <- import('os')
urllib <- import("urllib")
path_out<-paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),as.character(dat$product_name),sep="")
folder_path <- paste(wd1,"\\project_insurance_store\\output_contract\\")
folder_path
folder_path <- paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="")
folder_path
duplicated (folder_path)
folder_path[!duplicated (folder_path)]
dat$company_name %>% as.character()
dat$company_name %>% as.character() %>% paste()
dat$company_name %>% as.character() %>% paste(wd1,)
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$% !duplicated()
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$$ !duplicated()
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$$
folder_path <- paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$% !duplicated()
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$$ !.[duplicated()]
folder_path <- paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="")
folder_path %$% diplicated()
folder_path %>% diplicated()
folder_path %>% duplicated()
folder_path %>% .[!duplicated()]
folder_path %>% .[!duplicated(x)]
folder_path %>% .[!duplicated(folder_path)]
folder_path
folder_path %>% .[!duplicated(folder_path)]
.[!duplicated(paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") )]
folder_path %<% .[!duplicated(folder_path)]
folder_path %T>% .[!duplicated(folder_path)]
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library("magrittr")
folder_path %T>% .[!duplicated(folder_path)]
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$% !.[duplicated()]
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$% .[duplicated()]
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %$% duplicated()
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %T>% duplicated()
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %>% duplicated()
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %>% !duplicated()
folder_path <- paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="")
folder_path
folder_path %>% !duplicated()
folder_path %>% !duplicated(folder_path)
folder_path %>% .[!duplicated(folder_path)]
folder_path %>% .[!duplicated(folder_path)] %>% folder_path
folder_path %>% .[!duplicated(folder_path)] -> folder_path
folder_path
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="")
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") ->
folder_path %>% .[!duplicated(folder_path)] -> folder_path
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
folder_path %>% .[!duplicated(folder_path)] -> folder_path
folder_path
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %>% folder_path
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
folder_path %>% .[!duplicated(folder_path)] -> folder_path
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") ->
folder_path %>% .[!duplicated(folder_path)] -> folder_path
path_out extract "a"
iris %>%
extract(, 1:4) %>%
head
iris
iris %>%
extract(, 1:4)
iris
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") %>% extract(,1)
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
dim(folder_path)
x <- rnorm(100)
x
x %<>% abs %>% sort
x
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
folder_path %<>% .[!duplicated(folder_path)]
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os包
os <- import('os')
urllib <- import("urllib")
wd1<-shan_str_replace_all("[/]","\\\\",wd)
path_in <- paste0(wd1,"\\project_insurance_scrap\\output")
path_out <- paste0(wd1,"\\project_insurance_store\\input_new\\")
shan_move_file(path_in,path_out)
dat<-shan_read_dir_csv(path_out)
saveRDS(dat, "./input_old/output.rds")
dat
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
folder_path %<>% .[!duplicated(folder_path)]
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
folder_path %<>% .[!duplicated(folder_path)]
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster","magrittr")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster");library("magrittr")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os, urllib包
os <- import('os')
urllib <- import("urllib")
wd1<-shan_str_replace_all("[/]","\\\\",wd)
path_in <- paste0(wd1,"\\project_insurance_scrap\\output")
path_out <- paste0(wd1,"\\project_insurance_store\\input_new\\")
shan_move_file(path_in,path_out)
dat<-shan_read_dir_csv(path_out)
saveRDS(dat, "./input_old/output.rds")
dat
paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="") -> folder_path
folder_path %<>% .[!duplicated(folder_path)]
folder_path
folder_path <-paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),sep="")
folder_path %<>% .[!duplicated(folder_path)]
shan_mkdir(folder_path)
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster","magrittr")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster");library("magrittr")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os, urllib包
os <- import('os')
urllib <- import("urllib")
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster","magrittr")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster");library("magrittr")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
os$makedirs(folder_path)
folder_path
shan_make_dir(folder_path)
os$makedirs(folder_path[1])
os$makedirs(folder_path[1])
os$makedirs(folder_path[2])
os$makedirs(folder_path[2])
wd<-"E:/insurance"
#检查并安装package
packages.used <- c("stringr","data.table","xlsx","reticulate","cluster","magrittr")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library("data.table");library("stringr");library("xlsx");library("reticulate");library("cluster");library("magrittr")
# 找到Anaconda3 路径
use_condaenv("C:/Users/zhong/Anaconda3")
# 引入钟山语言分析包
source(paste0(wd,"/shan_cn_language_packages/shan_stringr/shan_stringr_functions.R",sep=""), encoding = "utf-8")
# 引入python下载器与文件处理器
source_python("./library/downloader.py")
source_python("./library/shan_file_processor.py")
source("./library/shan_file_processor.R")
# 引入python os, urllib包
os <- import('os')
urllib <- import("urllib")
os$makedirs(folder_path[2])
shan_make_dir(folder_path)
path_out<-paste(wd1,"\\project_insurance_store\\output_contract\\",as.character(dat$company_name),as.character(dat$product_name),sep="")
path_out
path_out[1]
